<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\MAC_LENOVO\source\repos\VisualizeDSA\VisualizeDSA\</FILEPATH>
      <FILENAME>Tools.cpp</FILENAME>
      <LINE>171</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::String::toVectorEdges</FUNCTION>
    <DECORATED>?toVectorEdges@String@Tools@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@4@@Z</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\MAC_LENOVO\source\repos\VisualizeDSA\VisualizeDSA\</FILEPATH>
      <FILENAME>Tools.cpp</FILENAME>
      <LINE>171</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::String::toVectorEdges</FUNCTION>
    <DECORATED>?toVectorEdges@String@Tools@@YA_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV?$vector@U?$pair@U?$pair@HH@std@@H@std@@V?$allocator@U?$pair@U?$pair@HH@std@@H@std@@@2@@4@@Z</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\MAC_LENOVO\source\repos\VisualizeDSA\VisualizeDSA\</FILEPATH>
      <FILENAME>Tools.cpp</FILENAME>
      <LINE>207</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::String::process</FUNCTION>
    <DECORATED>?process@String@Tools@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV34@@Z</DECORATED>
    <FUNCLINE>196</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\MAC_LENOVO\source\repos\VisualizeDSA\VisualizeDSA\</FILEPATH>
      <FILENAME>Tools.cpp</FILENAME>
      <LINE>207</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::String::process</FUNCTION>
    <DECORATED>?process@String@Tools@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV34@@Z</DECORATED>
    <FUNCLINE>196</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\MAC_LENOVO\source\repos\VisualizeDSA\VisualizeDSA\</FILEPATH>
      <FILENAME>Tools.cpp</FILENAME>
      <LINE>220</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::String::process</FUNCTION>
    <DECORATED>?process@String@Tools@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV34@@Z</DECORATED>
    <FUNCLINE>196</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\MAC_LENOVO\source\repos\VisualizeDSA\VisualizeDSA\</FILEPATH>
      <FILENAME>Tools.cpp</FILENAME>
      <LINE>220</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::String::process</FUNCTION>
    <DECORATED>?process@String@Tools@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV34@@Z</DECORATED>
    <FUNCLINE>196</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\MAC_LENOVO\source\repos\VisualizeDSA\VisualizeDSA\</FILEPATH>
      <FILENAME>Tools.cpp</FILENAME>
      <LINE>236</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::String::process</FUNCTION>
    <DECORATED>?process@String@Tools@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV34@@Z</DECORATED>
    <FUNCLINE>196</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\MAC_LENOVO\source\repos\VisualizeDSA\VisualizeDSA\</FILEPATH>
      <FILENAME>Tools.cpp</FILENAME>
      <LINE>236</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Tools::String::process</FUNCTION>
    <DECORATED>?process@String@Tools@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAV34@@Z</DECORATED>
    <FUNCLINE>196</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>